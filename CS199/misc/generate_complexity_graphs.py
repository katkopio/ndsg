import pdb

def generate_latex_graphs(df):
    for data in df:
        print("\\begin{figure}[H]")
        print("\\begin{center}")
        print("\\begin{tikzpicture}")
        print("\\begin{axis}[")
        print(f"title={data.get('title')},")
        print(f"xlabel={data.get('xlabel')},")
        print(f"ylabel={data.get('ylabel')},")
        print("width=\\textwidth * 0.45,")
        print("xtick=data,")
        print(f"symbolic x coords={data.get('x')},")
        print("x tick label style={rotate=45,anchor=east},")
        print(f"ytick={data.get('y')},")
        print(f"yticklabels={data.get('y')},")
        print("scaled y ticks=false")
        print("]")
        print(f"\\addplot[color=blue,mark=*] coordinates {data.get('coord')};")
        print("\end{axis}")
        print("\end{tikzpicture}")
        print(f"\caption{data.get('title')}")
        print(f"\label{data.get('label')}")
        print("\end{center}")
        print("\end{figure}")
        print()

if __name__ == '__main__':
    df = [{
        'title': "{Generate Corner Points}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009}",
        'coord': "{(1000, 0.000088) (2000, 0.000169) (3000, 0.000246) (4000, 0.000329) (5000, 0.000463) (6000, 0.000498) (7000, 0.000581) (8000, 0.000727) (9000, 0.000768) (10000, 0.000832)}",
        'label': "{fig:simp_generate_corner_pts}"
    }, {
        'title': "{Generate Grid Fence: $n$}",
        'xlabel': "Height in km",
        'ylabel': "Seconds",
        'x': "{10,20,30,40,50,60,70,80,90,100}",
        'y': "{0,0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009,0.001}",
        'coord': "{(10, 0.000076) (20, 0.000164) (30, 0.000231) (40, 0.00032) (50, 0.000424) (60, 0.000527) (70, 0.000624) (80, 0.000725) (90, 0.000837) (100, 0.00094)}",
        'label': "{fig:simp_generate_grid_fence_0}"
    }, {
        'title': "{Generate Grid Fence: $m$}",
        'xlabel': "Width in km",
        'ylabel': "Seconds",
        'x': "{10,20,30,40,50,60,70,80,90,100}",
        'y': "{0,0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009,0.001}",
        'coord': "{(10, 0.000067) (20, 0.000142) (30, 0.00025) (40, 0.000335) (50, 0.000434) (60, 0.00054) (70, 0.000606) (80, 0.000716) (90, 0.000806) (100, 0.000894)}",
        'label': "{fig:simp_generate_grid_fence_1}"
    }, {
        'title': "{Generate Grid Fence: $r$}",
        'xlabel': "Cell Size in km",
        'ylabel': "Seconds",
        'x': "{0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1}",
        'y': "{0,0.002,0.004,0.006,0.008,0.01,0.012,0.014}",
        'coord': "{(0.1,0.011783) (0.2,0.002384) (0.3,0.001021) (0.4,0.000566) (0.5,0.000309) (0.6,0.000219) (0.7,0.000155) (0.8,0.000118) (0.9,0.000105) (1,0.000068)}",
        'label': "{fig:simp_generate_grid_fence_2}"
    }, {
        'title': "{Generate Path: $n$}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.05,0.1,0.15,0.2,0.25,0.3,0.35}",
        'coord': "{(1000, 0.030534) (2000, 0.059435) (3000, 0.089783) (4000, 0.120481) (5000, 0.153125) (6000, 0.187127) (7000, 0.216573) (8000, 0.250119) (9000, 0.273319) (10000, 0.306018)}",
        'label': "{fig:simp_generate_path_0}"
    }, {
        'title': "{Generate Path: $m$}",
        'xlabel': "Number of Cells",
        'ylabel': "Seconds",
        'x': "{19,29,39,49,59,69,79,89,99,109}",
        'y': "{0,0.2,0.4,0.6,0.8,1,1.2,1.4}",
        'coord': "{(19, 0.030358) (29, 0.07922) (39, 0.147042) (49, 0.235497) (59, 0.343653) (69, 0.468471) (79, 0.614683) (89, 0.777269) (99, 0.965005) (109, 1.16851)}",
        'label': "{fig:simp_generate_path_1}"
    }, {
        'title': "{Generate Path: $l$}",
        'xlabel': "Number of Cells",
        'ylabel': "Seconds",
        'x': "{11,21,31,41,51,61,71,81,91,101}",
        'y': "{0,0.2,0.4,0.6,0.8,1,1.2,1.4,1.6,1.8}",
        'coord': "{(11, 0.029859) (21, 0.086386) (31, 0.17084) (41, 0.284233) (51, 0.423385) (61, 0.591645) (71, 0.789505) (81, 1.010097) (91, 1.25639) (101, 1.533731)}",
        'label': "{fig:simp_generate_path_2}"
    }, {
        'title': "{Loop Counting without Tolerance}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.0002,0.0004,0.0006,0.0008,0.001,0.0012,0.0014,0.0016,0.0018,0.002}",
        'coord': "{(1000, 0.000211) (2000, 0.00034) (3000, 0.000497) (4000, 0.000683) (5000, 0.000877) (6000, 0.00104) (7000, 0.001251) (8000, 0.001449) (9000, 0.001648) (10000, 0.001794)}",
        'label': "{fig:simp_route_check}"
    }, {
        'title': "{Loop Counting with Tolerance}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.00005,0.0001,0.00015,0.0002,0.00025,0.0003,0.00035,0.0004,0.00045,0.0005}",
        'coord': "{(1000, 0.000069) (2000, 0.000112) (3000, 0.000152) (4000, 0.000207) (5000, 0.000237) (6000, 0.000288) (7000, 0.000323) (8000, 0.000368) (9000, 0.000411) (10000, 0.000458)}",
        'label': "{fig:simp_loop_count}"
    }, {
        'title': "{Convert Points}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.0005,0.001,0.0015,0.002,0.0025,0.003,0.0035}",
        'coord': "{(1000, 0.000263) (2000, 0.000542) (3000, 0.000864) (4000, 0.00117) (5000, 0.001468) (6000, 0.0018) (7000, 0.002167) (8000, 0.002444) (9000, 0.002826) (10000, 0.003192)}",
        'label': "{fig:quad_convert_points}"
    }, {
        'title': "{Recursive Subdivide}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.02,0.04,0.06,0.08,0.1,0.12,0.14,0.16}",
        'coord': "{(1000, 0.007421) (2000, 0.017246) (3000, 0.026676) (4000, 0.038651) (5000, 0.057551) (6000, 0.069811) (7000, 0.088685) (8000, 0.105197) (9000, 0.129082) (10000, 0.149953)}",
        'label': "{fig:quad_recursive_subdivide}"
    }, {
        'title': "{Find Children}",
        'xlabel': "Number of Points",
        'ylabel': "Seconds",
        'x': "{1000,2000,3000,4000,5000,6000,7000,8000,9000,10000}",
        'y': "{0,0.0005,0.001,0.0015,0.002,0.0025,0.003,0.0035,0.004,0.0045}",
        'coord': "{(1000, 0.000357) (2000, 0.000666) (3000, 0.001064) (4000, 0.001365) (5000, 0.001848) (6000, 0.002232) (7000, 0.002825) (8000, 0.003279) (9000, 0.003412) (10000, 0.003929)}",
        'label': "{fig:quad_find_children}"
    }]

    generate_latex_graphs(df) 